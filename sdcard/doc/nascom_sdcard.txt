NASCOM SD-card: Solid-state mass-storage for the NASCOM
=======================================================

This add-on for the NASCOM connects to the Z80-PIO connector and provides
file-based storage on a micro SD card.

The goals of the design are two-fold:

1/ to provide a mechanism for extracting data (ROMS, tapes, floppy disk
contents) from a NASCOM

2/ to provide a "retro environment" in which a physical NASCOM machine can be
used without recourse to tape recorders or floppy drives.

It has been tested on a NASCOM 2 but should work equally well on a NASCOM 1.

All schematics, assembly drawings, software and application examples are freely
available.

The hardware consists of an Arduino Uno board, a micro-SD Daughtercard, an LED
and a few connectors. I built mine on an Arduino prototyping PCB. All the parts
can be bought from Banggood (TODO note on faulty PCB).

The physical interface is a ribbon-cable. The wiring is designed so that the
26-way ribbon cable from the NASCOM 2 connects directly. The wiring would need
to be tweaked to allow a similary straight connection to a NASCOM 1.

The electrical interface uses 11 signals. 8 are used as a bi-directional data
bus. CMD is a Command signal from the Host (NASCOM) to the Target (Arduino). H2T
is a handshake from the Host to the Target, T2H is a handshake from the Target
to the Host. A gnd connection completes the interface.

TODO can the Arduino draw power from the NASCOM through this cable?

The protocol on the electical interface uses a handshake in each direction so
that it is fully asynchronous (ie either end can run at any
speed). Theoretically, the CMD signal is redundant, but it makes the protocol
more rugged and easier to debug. The LED is illuminated if a data byte is
received when a command byte is expected; it stays illuminated until the next
command byte is received.

There are two parts to the software: software that runs on the Arduino, and
software that runs on the NASCOM.

Software running on the Arduino is written in C using the Arduino IDE. It uses
the existing SD library to provide access to a FAT filesystem on the SD card.
Use of the FAT filesystem means that files can be transferred to and from the
card using modern mainstream computers.

Software running on the NASCOM is written in Z80 assembler. The Z80 program
sends commands and data to the Arduino and reads status and data. The
command-set (implement on the Arduino) has been designed with the goal of
keeping the Z80 software simple and small.

WIRING
======

See the comments within the .ino file

PROGRAMMING THE ARDUINO
=======================

Use the ARDUINO IDE. Create a project named nascom_sdcard. Put the
nascom_sdcard.ino file into the folder created for the project. Compile and
download.

Start up the serial monitor and check for messages. If the SDcard is fitted and
wired up correctly there should be a start-up message in the monitor window.

NASCOM SOFTWARE
===============

There are some test programs: sd_loop.asm sd_wr1.asm sd_rd1.asm - they are
short enough to be typed in by hand for test purposes.

They should also act as programming examples. Refer to
"parallel_interface_command_set.md" for the complete set of commands.

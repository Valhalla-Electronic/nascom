#!/usr/bin/perl
#
# toZ80.awk
# Convert any 8080 assembler source file to Z80 mnemonics
# Copyright (c) 2003 Douglas Beattie Jr.
# All rights reserved world-wide
#
# Downloaded from: http://www.hytherion.com/beattidp/comput/z80cpm.htm
# Then converted from AWK to PERL by a2p
#
# Usage: ./toZ80 file.a80 > file.asm

$, = ' ';                      # set output field separator
$\ = "\n";                     # set output record separator

$temp_xyz = 'zyx';             # temporary replacement for Mnemonic
$temp_label = 'zz';            # temporary replacement for ^LABEL
$label = '?';                  # storage for label during conversion
$label_reg_exp = "^[^; \t]+";

line: while (<>) {
    chomp;	# strip record separator

    #### look for "r,M"
    if ((/^[^; \t]*[ \t]+[^; \t]+[ \t]+[^; \t]+,[Mm]/)) {
	s/,[Mm]/,(HL)/;
    }

    #### look for "M,r"
    if ((/^[^; \t]*[ \t]+[^; \t]+[ \t]+[Mm],[^; \t]+([; \t]|$)/)) {
	s/[Mm],/(HL),/;
    }

    #### MOV
    ############################
    if ((/^[^; \t]*[ \t]+([Mm][Oo][Vv][ \t])/)) {
	&save_label();
	s/[Mm][Oo][Vv]/LD /;
	&restore_label();
	print $_;
	next line;
    }

    #### MVI
    ############################
    if ((/^[^; \t]*[ \t]+([Mm][Vv][Ii][ \t])/)) {
	&save_label();
	s/[Mm][Vv][Ii]/LD /;
	&restore_label();
	print $_;
	next line;
    }

    #### LDAX
    ############################
    if ((/^[^; \t]*[ \t]+([Ll][Dd][Aa][Xx])/)) {
	&save_label();

	$wkg_str = &get_operand('[Ll][Dd][Aa][Xx]', 4);

	if ($wkg_str =~ /[Dd]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    ($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g,

	      s/[Ll][Dd][Aa][Xx]/eval $s_/e;
	    s/$wkg_str/A,(DE)/;
	    s/$temp_xyz/LD/;

	    &restore_label();
	    print $_;
	    next line;
	}

	elsif ($wkg_str =~ /[Bb]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    ($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g,

	      s/[Ll][Dd][Aa][Xx]/eval $s_/e;
	    s/$wkg_str/A,(BC)/;
	    s/$temp_xyz/LD/;

	    &restore_label();
	    print $_;
	    next line;
	}
    }

    #### STAX
    ############################
    if ((/^[^; \t]*[ \t]+([Ss][Tt][Aa][Xx])/)) {
	&save_label();

	$wkg_str = &get_operand('[Ss][Tt][Aa][Xx]', 4);

	if ($wkg_str =~ /[Dd]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    ($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g,

	      s/[Ss][Tt][Aa][Xx]/eval $s_/e;
	    s/$wkg_str/(DE),A/;
	    s/$temp_xyz/LD/;

	    &restore_label();
	    print $_;
	    next line;
	}

	elsif ($wkg_str =~ /[Bb]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    ($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g,

	      s/[Ss][Tt][Aa][Xx]/eval $s_/e;
	    s/$wkg_str/(BC),A/;
	    s/$temp_xyz/LD/;

	    &restore_label();
	    print $_;
	    next line;
	}
    }

    ### LDA word
    ############################
    if ((/^[^; \t]*[ \t]+([Ll][Dd][Aa])[ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	$wkg_str = &get_operand('[Ll][Dd][Aa]', 3);

	($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g, s/[Ll][Dd][Aa]/eval $s_/e;
	($s_ = '"'.('A,(' . $wkg_str . ')').'"') =~ s/&/\$&/g,

	  s/$wkg_str/eval $s_/e;
	s/$temp_xyz/LD/;

	&restore_label();
	print $_;
	next line;
    }

    ### STA word
    ############################
    if ((/^[^; \t]*[ \t]+([Ss][Tt][Aa])[ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	$wkg_str = &get_operand('[Ss][Tt][Aa]', 3);

	($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g, s/[Ss][Tt][Aa]/eval $s_/e;
	($s_ = '"'.('(' . $wkg_str . '),A').'"') =~ s/&/\$&/g,

	  s/$wkg_str/eval $s_/e;
	s/$temp_xyz/LD/;

	&restore_label();
	print $_;
	next line;
    }

    ###   LXI   B/D/H/SP,word
    ############################
    if ((/^[^; \t]*[ \t]+([Ll][Xx][Ii])/)) {
	&save_label();

	$wkg_str = &get_operand('[Ll][Xx][Ii]', 3);
	&sub_bdh();
	s/[Ll][Xx][Ii]/LD/;

	&restore_label();
	print $_;
	next line;
    }

    ### LHLD word
    ############################
    if ((/^[^; \t]*[ \t]+([Ll][Hh][Ll][Dd])[ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	$wkg_str = &get_operand('[Ll][Hh][Ll][Dd]', 4);

	($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g,

	  s/[Ll][Hh][Ll][Dd]/eval $s_/e;
	($s_ = '"'.('HL,(' . $wkg_str . ')').'"') =~ s/&/\$&/g,

	  s/$wkg_str/eval $s_/e;
	s/$temp_xyz/LD/;

	&restore_label();
	print $_;
	next line;
    }

    ### SHLD word
    ############################
    if ((/^[^; \t]*[ \t]+([Ss][Hh][Ll][Dd])[ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	$wkg_str = &get_operand('[Ss][Hh][Ll][Dd]', 4);

	($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g,

	  s/[Ss][Hh][Ll][Dd]/eval $s_/e;
	($s_ = '"'.('(' . $wkg_str . '),HL').'"') =~ s/&/\$&/g,

	  s/$wkg_str/eval $s_/e;
	s/$temp_xyz/LD/;

	&restore_label();
	print $_;
	next line;
    }

    #### Simple replacements (no operand)
    ############################

    ###### SPHL
    if ((/^[^; \t]*[ \t]+([Ss][Pp][Hh][Ll])([; \t]|$)/)) {
	&save_label();
	s/[Ss][Pp][Hh][Ll]/LD SP,HL/;
	&restore_label();
	print $_;
	next line;
    }

    ###### XCHG
    if ((/^[^; \t]*[ \t]+([Xx][Cc][Hh][Gg])([; \t]|$)/)) {
	&save_label();
	s/[Xx][Cc][Hh][Gg]/EX DE,HL/;
	&restore_label();
	print $_;
	next line;
    }

    ###### XTHL
    if ((/^[^; \t]*[ \t]+([Xx][Tt][Hh][Ll])([; \t]|$)/)) {
	&save_label();
	s/[Xx][Tt][Hh][Ll]/EX (SP),HL/;
	&restore_label();
	print $_;
	next line;
    }

    ###### HLT
    if ((/^[^; \t]*[ \t]+([Hh][Ll][Tt])([; \t]|$)/)) {
	&save_label();
	s/[Hh][Ll][Tt]/HALT/;
	&restore_label();
	print $_;
	next line;
    }

    ###### PCHL
    if ((/^[^; \t]*[ \t]+([Pp][Cc][Hh][Ll])([; \t]|$)/)) {
	&save_label();
	s/[Pp][Cc][Hh][Ll]/JP (HL)/;
	&restore_label();
	print $_;
	next line;
    }

    ###### ADI ACI
    ############################
    if ((/^[^; \t]*[ \t]+[aA]([dD]|[cC])[iI][ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	$wkg_str = &get_operand('[aA]([dD]|[cC])[iI]', 3);

	if ($_ =~ /[Aa][Dd][Ii]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    ($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g,

	      s/[Aa][Dd][Ii]/eval $s_/e;
	    ($s_ = '"'.('A,' . $wkg_str).'"') =~ s/&/\$&/g,

	      s/$wkg_str/eval $s_/e;
	    s/$temp_xyz/ADD/;
	}
	elsif ($_ =~ /[Aa][Cc][Ii]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    ($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g,

	      s/[Aa][Cc][Ii]/eval $s_/e;
	    ($s_ = '"'.('A,' . $wkg_str).'"') =~ s/&/\$&/g,

	      s/$wkg_str/eval $s_/e;
	    s/$temp_xyz/ADC/;
	}

	&restore_label();
	print $_;
	next line;
    }

    ###### SUI SBI
    ############################
    if ((/^[^; \t]*[ \t]+[sS]([uU]|[bB])[iI][ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	if ($_ =~ /[Ss][Uu][Ii]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Ss][Uu][Ii]/SUB/;
	}
	elsif ($_ =~ /[Ss][Bb][Ii]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Ss][Bb][Ii]/SBC/;
	}

	&restore_label();
	print $_;
	next line;
    }

    ###### ADD ADC
    ############################
    if ((/^[^; \t]*[ \t]+([aA][dD][dD]|[aA][dD][cC])[ \t]+[^ \t]+([; \t]|$)/))

      {
	&save_label();

	$wkg_str = &get_operand('([aA][dD][dD]|[aA][dD][cC])', 3);

	if ($_ =~ /[Aa][Dd][Dd]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    ($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g,

	      s/[Aa][Dd][Dd]/eval $s_/e;
	    ($s_ = '"'.('A,' . $wkg_str).'"') =~ s/&/\$&/g,

	      s/$wkg_str/eval $s_/e;
	    s/$temp_xyz/ADD/;
	}
	elsif ($_ =~ /[Aa][Dd][Cc]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    ($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g,

	      s/[Aa][Dd][Cc]/eval $s_/e;
	    ($s_ = '"'.('A,' . $wkg_str).'"') =~ s/&/\$&/g,

	      s/$wkg_str/eval $s_/e;
	    s/$temp_xyz/ADC/;
	}

	if ($wkg_str =~ /^[^;]*[Mm]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Mm]/(HL)/;
	}

	&restore_label();
	print $_;
	next line;
    }

    ###### DAD
    ############################

    if ((/^[^; \t]*[ \t]+([dD][aA][dD])[ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	$wkg_str = &get_operand('[dD][aA][dD]', 3);
	($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g, s/[dD][aA][dD]/eval $s_/e;
	&sub_bdh();
	s/$temp_xyz/ADD/;
	s/ADD[ \t]*/ADD HL,/;
	&restore_label();
	print $_;
	next line;
    }

    ###### INR DCR
    ############################
    if ((/^[^; \t]*[ \t]+([Ii][Nn][Rr]|[Dd][Cc][Rr])[ \t]/)) {
	&save_label();

	$wkg_str = &get_operand('([Ii][Nn][Rr]|[Dd][Cc][Rr])', 3);
	if ($wkg_str =~ /^[^;]*[Mm]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Mm]/(HL)/;
	}

	if ($_ =~ /[Ii][Nn][Rr]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Ii][Nn][Rr]/INC/;
	}
	elsif ($_ =~ /[Dd][Cc][Rr]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Dd][Cc][Rr]/DEC/;
	}

	&restore_label();
	print $_;
	next line;
    }

    ###### INX DCX
    ############################
    if ((/^[^; \t]*[ \t]+([Ii][Nn][Xx]|[Dd][Cc][Xx])[ \t]+[^ \t]+([; \t]|$)/))

      {
	&save_label();

	$wkg_str = &get_operand('([Ii][Nn][Xx]|[Dd][Cc][Xx])', 3);

	if ($_ =~ /[Ii][Nn][Xx]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    ($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g,

	      s/[Ii][Nn][Xx]/eval $s_/e;
	    &sub_bdh();
	    s/$temp_xyz/INC/;
	}
	elsif ($_ =~ /[Dd][Cc][Xx]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    ($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g,

	      s/[Dd][Cc][Xx]/eval $s_/e;
	    &sub_bdh();
	    s/$temp_xyz/DEC/;
	}

	&restore_label();
	print $_;
	next line;
    }

    ###### CMA
    ############################
    if ((/^[^; \t]*[ \t]+([Cc][Mm][Aa])([; \t]|$)/)) {
	&save_label();
	s/[Cc][Mm][Aa]/CPL/;
	&restore_label();
	print $_;
	next line;
    }

    ###### STC
    ############################
    if ((/^[^; \t]*[ \t]+([Ss][Tt][Cc])([; \t]|$)/)) {
	&save_label();
	s/[Ss][Tt][Cc]/SCF/;
	&restore_label();
	print $_;
	next line;
    }

    ###### CMC
    ############################
    if ((/^[^; \t]*[ \t]+([Cc][Mm][Cc])([; \t]|$)/)) {
	&save_label();
	s/[Cc][Mm][Cc]/CCF/;
	&restore_label();
	print $_;
	next line;
    }

    ###### RLC
    ############################
    if ((/^[^; \t]*[ \t]+([Rr][Ll][Cc])([; \t]|$)/)) {
	&save_label();
	s/[Rr][Ll][Cc]/RLCA/;
	&restore_label();
	print $_;
	next line;
    }

    ###### RRC
    ############################
    if ((/^[^; \t]*[ \t]+([Rr][Rr][Cc])([; \t]|$)/)) {
	&save_label();
	s/[Rr][Rr][Cc]/RRCA/;
	&restore_label();
	print $_;
	next line;
    }

    ###### RAL
    ############################
    if ((/^[^; \t]*[ \t]+([Rr][Aa][Ll])([; \t]|$)/)) {
	&save_label();
	s/[Rr][Aa][Ll]/RLA/;
	&restore_label();
	print $_;
	next line;
    }

    ###### RAR
    ############################
    if ((/^[^; \t]*[ \t]+([Rr][Aa][Rr])([; \t]|$)/)) {
	&save_label();
	s/[Rr][Aa][Rr]/RRA/;
	&restore_label();
	print $_;
	next line;
    }

    ###### ANI XRI ORI
    ############################
    if ((/^[^; \t]*[ \t]+([Aa][Nn][Ii]|[Xx][Rr][Ii]|[Oo][Rr][Ii])[ \t]+[^ \t]+([; \t]|$)/))

      {
	&save_label();

	if ($_ =~ /[Aa][Nn][Ii]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Aa][Nn][Ii]/AND/;
	}
	elsif ($_ =~ /[Xx][Rr][Ii]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Xx][Rr][Ii]/XOR/;
	}
	elsif ($_ =~ /[Oo][Rr][Ii]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Oo][Rr][Ii]/OR/;
	}
	&restore_label();
	print $_;
	next line;
    }

    ###### ANA XRA ORA
    ############################
    if ((/^[^; \t]*[ \t]+([Aa][Nn][Aa]|[Xx][Rr][Aa]|[Oo][Rr][Aa])[ \t]/)) {
	&save_label();

	$wkg_str = &get_operand('([Aa][Nn][Aa]|[Xx][Rr][Aa]|[Oo][Rr][Aa])',

	  3);
	if ($wkg_str =~ /^[^;]*[Mm]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Mm]/(HL)/;
	}

	if ($_ =~ /[Aa][Nn][Aa]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Aa][Nn][Aa]/AND/;
	}
	elsif ($_ =~ /[Xx][Rr][Aa]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Xx][Rr][Aa]/XOR/;
	}
	elsif ($_ =~ /[Oo][Rr][Aa]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Oo][Rr][Aa]/OR/;
	}

	&restore_label();
	print $_;
	next line;
    }

    ###### CPI
    ############################
    if ((/^[^; \t]*[ \t]+([Cc][Pp][Ii])[ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	s/[Cc][Pp][Ii]/CP/;

	&restore_label();
	print $_;
	next line;
    }

    ###### CMP
    ############################
    if ((/^[^; \t]*[ \t]+([Cc][Mm][Pp])[ \t]/)) {
	&save_label();

	$wkg_str = &get_operand('[Cc][Mm][Pp]', 3);

	($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g, s/[Cc][Mm][Pp]/eval $s_/e;
	if ($wkg_str =~ /^[^;]*[Mm]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Mm]/(HL)/;
	}
	s/$temp_xyz/CP/;

	&restore_label();
	print $_;
	next line;
    }

    ###### JMP
    ############################
    if ((/^[^; \t]*[ \t]+([Jj][Mm][Pp])[ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	s/[Jj][Mm][Pp]/JP/;

	&restore_label();
	print $_;
	next line;
    }

    ###### JNZ JNC JPO JPE
    ############################
    #    (/^[^; \t]*[ \t]+[Jj]([Nn][Zz]|[Nn][Cc]|[Pp][Oo]|[Pp][Ee])[ \t]+[^ \t]+([; \t]|$)/) {
    if ((/^[^; \t]*[ \t]+[Jj]([Nn]([Zz]|[Cc])|([Pp]([Oo]|[Ee])))[ \t]+[^ \t]+([; \t]|$)/))

      {
	&save_label();

	if ($_ =~ /[Jj][Nn][Zz][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Jj][Nn][Zz][ \t]+/JP NZ,/;
	}
	elsif ($_ =~ /[Jj][Nn][Cc][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Jj][Nn][Cc][ \t]+/JP NC,/;
	}
	elsif ($_ =~ /[Jj][Pp][Oo][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Jj][Pp][Oo][ \t]+/JP PO,/;
	}
	elsif ($_ =~ /[Jj][Pp][Ee][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Jj][Pp][Ee][ \t]+/JP PE,/;
	}

	&restore_label();
	print $_;
	next line;
    }

    ###### JZ JC JP JM
    ############################
    #    (/^[^; \t]*[ \t]+[Jj]([Nn][Zz]|[Nn][Cc]|[Pp][Oo]|[Pp][Ee])[ \t]+[^ \t]+([; \t]|$)/) {
    if ((/^[^; \t]*[ \t]+[Jj]([Zz]|[Cc]|[Pp]|[Mm])[ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	if ($_ =~ /^[^;]*[Jj][Zz][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Jj][Zz][ \t]+/JP Z,/;
	}
	elsif ($_ =~ /^[^;]*[Jj][Cc][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Jj][Cc][ \t]+/JP C,/;
	}
	elsif ($_ =~ /^[^;]*[Jj][Pp][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Jj][Pp][ \t]+/JP P,/;
	}
	elsif ($_ =~ /^[^;]*[Jj][Mm][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Jj][Mm][ \t]+/JP M,/;
	}

	&restore_label();
	print $_;
	next line;
    }

    ###### CNZ CNC CPO CPE
    ############################
    if ((/^[^; \t]*[ \t]+[Cc]([Nn]([Zz]|[Cc])|([Pp]([Oo]|[Ee])))[ \t]+[^ \t]+([; \t]|$)/))

      {
	&save_label();

	if ($_ =~ /[Cc][Nn][Zz][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Cc][Nn][Zz][ \t]+/CALL NZ,/;
	}
	elsif ($_ =~ /[Cc][Nn][Cc][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Cc][Nn][Cc][ \t]+/CALL NC,/;
	}
	elsif ($_ =~ /[Cc][Pp][Oo][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Cc][Pp][Oo][ \t]+/CALL PO,/;
	}
	elsif ($_ =~ /[Cc][Pp][Ee][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Cc][Pp][Ee][ \t]+/CALL PE,/;
	}

	&restore_label();
	print $_;
	next line;
    }

    ###### CZ CC CP CM
    ############################
    if ((/^[^; \t]*[ \t]+[Cc]([Zz]|[Cc]|[Pp]|[Mm])[ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	if ($_ =~ /[Cc][Zz][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Cc][Zz][ \t]+/CALL Z,/;
	}
	elsif ($_ =~ /[Cc][Cc][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Cc][Cc][ \t]+/CALL C,/;
	}
	elsif ($_ =~ /[Cc][Pp][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Cc][Pp][ \t]+/CALL P,/;
	}
	elsif ($_ =~ /[Cc][Mm][ \t]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Cc][Mm][ \t]+/CALL M,/;
	}

	&restore_label();
	print $_;
	next line;
    }

    ###### RNZ RNC RPO RPE
    ############################
    if ((/^[^; \t]*[ \t]+[Rr]([Nn]([Zz]|[Cc])|([Pp]([Oo]|[Ee])))+([; \t]|$)/)) {
	&save_label();

	if ($_ =~ /[Rr][Nn][Zz]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Rr][Nn][Zz]/RET NZ/;
	}
	elsif ($_ =~ /[Rr][Nn][Cc]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Rr][Nn][Cc]/RET NC/;
	}
	elsif ($_ =~ /[Rr][Pp][Oo]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Rr][Pp][Oo]/RET PO/;
	}
	elsif ($_ =~ /[Rr][Pp][Ee]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Rr][Pp][Ee]/RET PE/;
	}

	&restore_label();
	print $_;
	next line;
    }

    ###### RZ RC RP RM
    ############################
    if ((/^[^; \t]*[ \t]+[Rr]([Zz]|[Cc]|[Pp]|[Mm])+([; \t]|$)/)) {
	&save_label();

	if ($_ =~ /[Rr][Zz]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Rr][Zz]/RET Z/;
	}
	elsif ($_ =~ /[Rr][Cc]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Rr][Cc]/RET C/;
	}
	elsif ($_ =~ /[Rr][Pp]+/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Rr][Pp]/RET P/;
	}
	elsif ($_ =~ /[Rr][Mm]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Rr][Mm]/RET M/;
	}

	&restore_label();
	print $_;
	next line;
    }

    ###### RST 0..7
    ############################
    if ((/^[^; \t]*[ \t]+([Rr][Ss][Tt])[ \t]/)) {
	&save_label();

	$wkg_str = &get_operand('[Rr][Ss][Tt]', 3);

	if ($wkg_str =~ /^[^;]*1/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/1/08h/;
	}
	elsif ($wkg_str =~ /^[^;]*2/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/2/10h/;
	}
	elsif ($wkg_str =~ /^[^;]*3/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/3/18h/;
	}
	elsif ($wkg_str =~ /^[^;]*4/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/4/20h/;
	}
	elsif ($wkg_str =~ /^[^;]*5/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/5/28h/;
	}
	elsif ($wkg_str =~ /^[^;]*6/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/6/30h/;
	}
	elsif ($wkg_str =~ /^[^;]*7/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/7/38h/;
	}

	&restore_label();
	print $_;
	next line;
    }

    ###### PUSH B/D/H/PSW
    ############################

    if ((/^[^; \t]*[ \t]+([Pp][Uu][Ss][Hh])[ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	$wkg_str = &get_operand('[Pp][Uu][Ss][Hh]', 4);
	($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g,

	  s/[Pp][Uu][Ss][Hh]/eval $s_/e;
	&sub_bdh();
	if ($wkg_str =~ /[Pp][Ss][Ww]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Pp][Ss][Ww]/AF/;
	}
	s/$temp_xyz/PUSH/;

	&restore_label();
	print $_;
	next line;
    }

    ###### POP B/D/H/PSW
    ############################

    if ((/^[^; \t]*[ \t]+([Pp][Oo][Pp])[ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	$wkg_str = &get_operand('[Pp][Oo][Pp]', 3);
	($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g, s/[Pp][Oo][Pp]/eval $s_/e;
	&sub_bdh();
	if ($wkg_str =~ /[Pp][Ss][Ww]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Pp][Ss][Ww]/AF/;
	}
	s/$temp_xyz/POP/;

	&restore_label();
	print $_;
	next line;
    }

    ### OUT byte
    ############################
    if ((/^[^; \t]*[ \t]+([Oo][Uu][Tt])[ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	$wkg_str = &get_operand('[Oo][Uu][Tt]', 3);

	($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g, s/[Oo][Uu][Tt]/eval $s_/e;
	($s_ = '"'.('(' . $wkg_str . '),A').'"') =~ s/&/\$&/g,

	  s/$wkg_str/eval $s_/e;
	s/$temp_xyz/OUT/;

	&restore_label();
	print $_;
	next line;
    }

    ### IN byte
    ############################
    if ((/^[^; \t]*[ \t]+([Ii][Nn])[ \t]+[^ \t]+([; \t]|$)/)) {
	&save_label();

	$wkg_str = &get_operand('[Ii][Nn]', 2);

	($s_ = '"'.($temp_xyz).'"') =~ s/&/\$&/g, s/[Ii][Nn]/eval $s_/e;
	($s_ = '"'.('A,(' . $wkg_str . ')').'"') =~ s/&/\$&/g,

	  s/$wkg_str/eval $s_/e;
	s/$temp_xyz/IN/;

	&restore_label();
	print $_;
	next line;
    }

    ###### Default
    if ((/^.*/)) {
	print $_;
	next line;
    }
}

sub save_label {
    if ($_ =~ /^[^; \t]+/ ? scalar($RLENGTH = length($&),

      $RSTART = length($`)+1) : 0) {
	$label = substr($_, ($RSTART)-1, $RLENGTH);
	#printf("%d %d",RSTART,RLENGTH);
	($s_ = '"'.($temp_label).'"') =~ s/&/\$&/g,

	  s/$label_reg_exp/eval $s_/e;
    }
}

sub restore_label {
    if ($label ne '?') {
	($s_ = '"'.($label).'"') =~ s/&/\$&/g, s/$temp_label/eval $s_/e;
	$label = '?';# init for next label

	;
    }
}

sub get_operand {
    local($op_regexp, $op_len) = @_;
    $regexp_str = $op_regexp . "[ \t]+[^ \t,]+([, \t]|\$)";
    $_ =~ $regexp_str ? scalar($RLENGTH = length($&),

      $RSTART = length($`)+1) : 0;
    $tmp_str = substr($_, (($RSTART + $op_len))-1, ($RLENGTH - ($op_len)));
    $tmp_str =~ /[^ \t,]+/ ? scalar($RLENGTH = length($&),

      $RSTART = length($`)+1) : 0;
    $tmp_str = substr($tmp_str, (($RSTART))-1, ($RLENGTH));
    $tmp_str;
}

# Substitute BC for B, DE for D, or HL for H in operand field
sub sub_bdh {
    if ($wkg_str =~ /[BbDdHh]/ ? scalar($RLENGTH = length($&),

      $RSTART = length($`)+1) : 0) {
	if ($wkg_str =~ /[Bb]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Bb]/BC/;
	}
	elsif ($wkg_str =~ /[Dd]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Dd]/DE/;
	}
	elsif ($wkg_str =~ /[Hh]/ ? scalar($RLENGTH = length($&),

	  $RSTART = length($`)+1) : 0) {
	    s/[Hh]/HL/;
	}
    }
}
